--- lib-python/2.7/gzip.py	2015-04-18 05:34:44.479111016 +0300
+++ Lib/gzip.py	2015-04-18 05:34:31.783089759 +0300
@@ -372,11 +372,29 @@
             self.myfileobj.close()
             self.myfileobj = None
 
-    def flush(self,zlib_mode=zlib.Z_SYNC_FLUSH):
+    def __enter__(self):
+        # __enter__ is defined in _jyio._IOBase (aka
+        # org.python.modules._io.PyIOBase), but because we override
+        # the closed property in this class, we need to reproduce this
+        # method here for the calls to properly go through, much like
+        # the difference seen in _check_closed vs _checkClosed
         self._check_closed()
-        if self.mode == WRITE:
-            # Ensure the compressor's buffer is flushed
-            self.fileobj.write(self.compress.flush(zlib_mode))
+        return self
+
+    __iter__ = __enter__
+
+    if not sys.platform.startswith('java'):
+        def flush(self,zlib_mode=zlib.Z_SYNC_FLUSH):
+            self._check_closed()
+            if self.mode == WRITE:
+                # Ensure the compressor's buffer is flushed
+                self.fileobj.write(self.compress.flush(zlib_mode))
+                self.fileobj.flush()
+    else:
+        # Java lacks Z_SYNC_FLUSH; thus Jython can't flush the
+        # compressobj until EOF
+        def flush(self,zlib_mode=None):
+            self._check_closed()
             self.fileobj.flush()
 
     def fileno(self):
