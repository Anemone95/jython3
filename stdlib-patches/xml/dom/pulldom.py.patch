--- lib-python/2.7/xml/dom/pulldom.py	2015-04-18 05:34:44.843111625 +0300
+++ Lib/xml/dom/pulldom.py	2015-04-18 05:34:31.883089926 +0300
@@ -55,13 +55,6 @@
         self._current_context = self._ns_contexts.pop()
 
     def startElementNS(self, name, tagName , attrs):
-        # Retrieve xml namespace declaration attributes.
-        xmlns_uri = 'http://www.w3.org/2000/xmlns/'
-        xmlns_attrs = getattr(self, '_xmlns_attrs', None)
-        if xmlns_attrs is not None:
-            for aname, value in xmlns_attrs:
-                attrs._attrs[(xmlns_uri, aname)] = value
-            self._xmlns_attrs = []
         uri, localname = name
         if uri:
             # When using namespaces, the reader may or may not
@@ -85,16 +78,22 @@
             else:
                 node = self.buildDocument(None, localname)
 
-        for aname,value in attrs.items():
-            a_uri, a_localname = aname
-            if a_uri == xmlns_uri:
-                if a_localname == 'xmlns':
-                    qname = a_localname
+        # Retrieve xml namespace declaration attributes.
+        xmlns_uri = 'http://www.w3.org/2000/xmlns/'
+        xmlns_attrs = getattr(self, '_xmlns_attrs', None)
+        if xmlns_attrs is not None:
+            for aname, value in xmlns_attrs:
+                if aname == 'xmlns':
+                    qname = aname
                 else:
-                    qname = 'xmlns:' + a_localname
-                attr = self.document.createAttributeNS(a_uri, qname)
+                    qname = 'xmlns:' + aname
+                attr = self.document.createAttributeNS(xmlns_uri, qname)
+                attr.value = value
                 node.setAttributeNodeNS(attr)
-            elif a_uri:
+            self._xmlns_attrs = []
+        for aname,value in attrs.items():
+            a_uri, a_localname = aname
+            if a_uri:
                 prefix = self._current_context[a_uri]
                 if prefix:
                     qname = prefix + ":" + a_localname
@@ -281,6 +280,8 @@
         """ Fallback replacement for getEvent() that emits
             the events that _slurp() read previously.
         """
+        if self.pulldom.firstEvent[1] is None:
+            return None
         rc = self.pulldom.firstEvent[1][0]
         self.pulldom.firstEvent[1] = self.pulldom.firstEvent[1][1]
         return rc
